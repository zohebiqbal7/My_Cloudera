***********************************************
	Cloudera production deployment
***********************************************


-----*** Create a VPC ***-----

## Create a elastic ip

## Create VPC with a public and a private subnet

## Create two security groups 

-> In default security group

All traffic     your-ip/32
All traffic     private-subnet-cidr/24


-> in second security group (allowing communication only from edge)

All traffic     default-sec-group-id
All traffic     private-subnet-cidr/24


-----*** Launch public nodes ***-----


-----*** Update the server ***-----
$ sudo apt-get update && sudo apt-get dist-upgrade -y

-----*** Disable transparent huge pages ***-----
$ sudo nano /etc/rc.local
## Add these lines:

if test -f /sys/kernel/mm/transparent_hugepage/enabled; then
    echo never > /sys/kernel/mm/transparent_hugepage/enabled
fi

if test -f /sys/kernel/mm/transparent_hugepage/defrag; then
    echo never > /sys/kernel/mm/transparent_hugepage/defrag
fi

$sudo -i

$source /etc/rc.local 

-----*** Install NTP ***-----

$ sudo apt-get install ntp -y 
$ sudo service ntp status
## If it isn't running 
$ sudo service ntp start 


-----*** Set Swappiness ***-----

sudo sysctl -a | grep vm.swappiness
sudo sysctl vm.swappiness=1
echo 'vm.swappiness=1' | sudo tee --append /etc/sysctl.conf


-----*** Setting root reserved space ***-----

$ sudo lsblk
$ sudo tune2fs -l /dev/nvme0n1p1
$ sudo tune2fs -l /dev/nvme0n1p1 | egrep "Block count|Reserved block count" 
$ sudo tune2fs -m 1 /dev/nvme0n1p1
$ sudo tune2fs -l /dev/nvme0n1p1 | egrep "Block count|Reserved block count" 


### Note : Now, save the instance to an image, call it “Cloudera Manager” Make sure to 
check “No reboot”


-----*** Launch cluster nodes ***----

Launch reamining instances in private subnet

Select second security group for these instances


##### Preparing external database for cloudera #####

-----*** Install MySQL ***-----

sudo apt-get install mysql-server -y

-----*** Stop mysql ***-----

sudo service mysql stop 

sudo service mysql status

-----*** Move innodb log file ***-----

mkdir mysqlbup

sudo su

cd /var/lib/mysql

 mv ib_logfile0 /home/ubuntu/mysqlbup/

 mv ib_logfile1 /home/ubuntu/mysqlbup/

exit


-----*** Edit the option file mysqld.cnf to cloudera recommended settings ***-----

cd /etc/mysql/mysql.conf.d/

sudo nano mysqld.cnf

==============================================================================

[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
transaction-isolation = READ-COMMITTED
# Disabling symbolic-links is recommended to prevent assorted security risks;
# to do so, uncomment this line:
symbolic-links = 0

key_buffer_size = 32M
max_allowed_packet = 16M
thread_stack = 256K
thread_cache_size = 64
query_cache_limit = 8M
query_cache_size = 64M
query_cache_type = 1

max_connections = 550
#expire_logs_days = 10
#max_binlog_size = 100M

#log_bin should be on a disk with enough free space.
#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your
#system and chown the specified folder to the mysql user.
log_bin=/var/lib/mysql/mysql_binary_log

#In later versions of MySQL, if you enable the binary log and do not set
#a server_id, MySQL will not start. The server_id must be unique within
#the replicating group.
server_id=1

binlog_format = mixed

read_buffer_size = 2M
read_rnd_buffer_size = 16M
sort_buffer_size = 8M
join_buffer_size = 8M

# InnoDB settings
innodb_file_per_table = 1
innodb_flush_log_at_trx_commit  = 2
innodb_log_buffer_size = 64M
innodb_buffer_pool_size = 4G
innodb_thread_concurrency = 8
innodb_flush_method = O_DIRECT
innodb_log_file_size = 512M

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

sql_mode=STRICT_ALL_TABLES

==========================================================================

-----*** Make mysql start on boot ***----

sudo update-rc.d mysql defaults

-----*** Start mysql ***-----

sudo service mysql start 

-----*** Mysql secure install ***----

$ sudo /usr/bin/mysql_secure_installation
[...]
Enter current password for root (enter for none):
OK, successfully used password, moving on...
[...]
Set root password? [Y/n] y
New password:
Re-enter new password:
Remove anonymous users? [Y/n] Y
[...]
Disallow root login remotely? [Y/n] N
[...]
Remove test database and access to it [Y/n] Y
[...]
Reload privilege tables now? [Y/n] Y
All done!

-----*** Install mysql JDBC driver ***-----

sudo apt-get install libmysql-java



#### Establish Your Cloudera Manager Repository #####

##### Configuring a local package repository #####

---** Setup web server **---

$ sudo apt-get install apache2 -y

$ sudo nano /etc/apache2/apache2.conf

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig /etc/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz .parcel

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>


$ sudo service apache2 restart

$ sudo mkdir -p /var/www/html/cloudera-repos/cm6

----*** Download the Cloudera Manager Repo tarball ***----

$ wget tarball

$ sudo tar xvfz cm6.3.3-ubuntu1604.tar.gz -C /var/www/html/cloudera-repos/cm6 --strip-components=1

$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/cm6

----*** Seting up internal repository ***----

$ sudo nano /etc/apt/sources.list.d/cloudera-repo.list
deb [trusted=yes] http://<private-ip>/cloudera-repos/cm6 xenial-cm6 contrib 

$ sudo apt-key adv --recv-key --keyserver keyserver.ubuntu.com 73985D43B0B19C9F

$ sudo apt-get update 


##### Install Cloudera Manager server software #####

---** Install Oracle JDK **---

$ sudo apt-get install oracle-j2sdk1.8 -y

---** Install Cloudera Manager packages **---

$ sudo apt-get install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server -y


##### Setting up the Cloudera Manager Server Database #####

mysql -u root -p

mysql>CREATE DATABASE cmdb;
mysql> CREATE USER 'cm'@'localhost' IDENTIFIED BY 'password';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'cm'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION;
mysql> exit;

sudo /opt/cloudera/cm/schema/scm_prepare_database.sh -p mysql cmdb cm password

##### Start the Cloudera Manager Server #####

$ sudo service cloudera-scm-server start

$ sudo service cloudera-scm-agent start

$ sudo service cloudera-scm-agent status


##### Setup custom CDH repository #####

>> Dowload parcel,sha and manifest file and move them to Local parcel repository

$ cd /opt/cloudera/parcel-repo/

$ ll

$ sudo chown cloudera-scm:cloudera-scm CDH-6.3.3-1.cdh6.3.3.p0.1796617-xenial.parcel

$ sudo chown cloudera-scm:cloudera-scm CDH-6.3.3-1.cdh6.3.3.p0.1796617-xenial.parcel.sha

$ sudo chown cloudera-scm:cloudera-scm manifest.json

$ cd

---** Restart Cloudera manager server **---

sudo service cloudera-scm-server restart

## Login to CM web UI on 7180

After assigning service roles to hosts, when you are on database setup page, do following

##### Create database for CDH services #####


mysql -u root -p

>> For reports manager

mysql> create database rman DEFAULT CHARACTER SET utf8;
mysql> CREATE USER 'rman'@'ip-10-0-1-65.ec2.internal' IDENTIFIED BY 'password';
(Note : Enter pri-dns of host where the particular service is running)
mysql> grant all on rman.* TO 'rman'@'ip-10-0-1-65.ec2.internal' IDENTIFIED BY 'password';


>> For Hive

mysql> create database metastore DEFAULT CHARACTER SET utf8;
mysql> CREATE USER 'hive'@'ip-10-0-1-182.ec2.internal' IDENTIFIED BY 'password';
mysql> grant all on metastore.* TO 'hive'@'ip-10-0-1-182.ec2.internal' IDENTIFIED BY 'password';


>> For Oozie

mysql> create database oozie default character set utf8;
mysql> CREATE USER 'oozie'@'ip-10-0-1-182.ec2.internal' IDENTIFIED BY 'password';
mysql> grant all privileges on oozie.* to 'oozie'@'ip-10-0-1-182.ec2.internal' identified by 'password';

== Add mysql driver jar

sudo cp /usr/share/java/mysql-connector-java-5.1.38.jar /opt/cloudera/parcels/CDH/lib/oozie/lib/


mysql -u root -p

mysql> create database hue default character set utf8 default collate utf8_general_ci;
mysql> CREATE USER 'hue'@'ip-10-0-0-100.ec2.internal' IDENTIFIED BY 'password';
mysql> grant all on hue.* to 'hue'@'ip-10-0-0-100.ec2.internal' identified by 'password';


##### Install Mysql jdbc jar on hosts where services are running #####

sudo apt-get install libmysql-java

sudo cp /usr/share/java/mysql-connector-java-5.1.28.jar /opt/cloudera/parcels/CDH/lib/oozie/lib/


##### On database host

sudo su

cd /etc/mysql//mysql.conf.d/

sudo nano mysqld.cnf

bind-address=(private-ip-of-cms)

## Now continue installation on CM web ui



-----*** Set up Edge node ***-----


Add gateway roles on CM node

test whether read and write is working

## Run a test job

yarn jar /opt/cloudera/parcels/CDH/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar pi 10 100 

## Set up Jumper node to access webui of daemons

