******************************************************************
		Cloudera Enterprise - Deployment
******************************************************************

----*** Get the instances ready ***----

## Do all pre-requisites

----*** Install Oracle Java 8 ***----

## Download the oracle java 8 tarball

$ tar -xzf jdk-8u202-linux-x64.tar.gz

$ sudo mkdir /usr/java

$ sudo cp -r jdk1.8.0_202/ /usr/java


### Note : Now, save the instance to an image, call it “Cloudera Manager” Make sure to 
check “No reboot”


##### Configuring a local package repository #####

---** Setup web server **---

$ sudo apt-get install apache2 -y

$ sudo nano /etc/apache2/apache2.conf

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig /etc/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz .parcel

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>


$ sudo service apache2 restart

$ sudo mkdir -p /var/www/html/cloudera-repos/cm5

----*** Download the Cloudera Manager Repo tarball ***----

$ wget tarball

$ sudo tar xvfz cm5.13.3-ubuntu14-04.tar.gz -C /var/www/html/cloudera-repos/cm5 --strip-components=1

$ sudo chmod -R ugo+rX /var/www/html/cloudera-repos/cm5


----*** Seting up internal repository ***----
$ sudo nano /etc/apt/sources.list.d/cloudera-repo.list
deb [trusted=yes] http://<private-ip>/cloudera-repos/cm5 trusty-cm5 contrib 

$ sudo apt-key adv --recv-key --keyserver keyserver.ubuntu.com 327574EE02A818DD

$ sudo apt-get update 


##### Install Cloudera Manager server software #####

$ sudo apt-get install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server -y

$ sudo apt-get install cloudera-manager-server-db-2 -y

$ sudo service cloudera-scm-server-db start


---** Set Java Home **---

sudo nano /etc/default/cloudera-scm-server

export JAVA_HOME=/usr/java/jdk1.8.0_202


---** Start Cloudera Manager server **---

$ sudo service cloudera-scm-server start

---** Start Cloudera Manager agent **---

$ sudo service cloudera-scm-agent start

$ sudo service cloudera-scm-agent status


##### Setup custom CDH repository #####


>> Dowload parcel,sha and manifest file and move them to Local parcel repository

$ cd /opt/cloudera/parcel-repo/

$ ll

$ sudo chown cloudera-scm:cloudera-scm CDH-5.13.3-1.cdh5.13.3.p0.2-trusty.parcel

$ sudo chown cloudera-scm:cloudera-scm CDH-5.13.3-1.cdh5.13.3.p0.2-trusty.parcel.sha

$ sudo chown cloudera-scm:cloudera-scm manifest.json

$ cd

---** Restart Cloudera manager server **---

sudo service cloudera-scm-server restart

## Login to CM web UI on 7180

Continue installation on WebUi


---** Set Java home location for all hosts **---


- O CM -> Hosts -> All hosts -> Configuration - Ctegory Advanced

- Set the Java Home Directory property to the custom location.

- Click Save Changes.

- Restart all services.


